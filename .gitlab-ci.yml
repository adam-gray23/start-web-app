stages:          # List of stages for jobs, and their order of execution
  - build
  - test

docker-build:       # This job runs in the build stage, which runs first.
  stage: build
  image: docker:latest  # Use the Docker image to run Docker commands
  services:
    - docker:dind  # Enable Docker-in-Docker service
  variables:
    DOCKER_IMAGE_TAG: "start-docker-image"
  script:
    - echo ${DOCKER_USERNAME}
    - echo ${DOCKER_PASSWORD}
    - docker login -u ${DOCKER_USERNAME} --password-stdin ${DOCKER_PASSWORD}
    - docker build -t $DOCKER_IMAGE_TAG .  # Build the image
    - docker push $DOCKER_IMAGE_TAG  # Push the built image to your registry

    

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests... This will take about 10 seconds."
    - sleep 10
    - echo "Code coverage is 90%"

# lint-test-job:   # This job also runs in the test stage.
#   stage: test    # It can run at the same time as unit-test-job (in parallel).
#   script:
#     - echo "Linting code... This will take about 10 seconds."
#     - sleep 10
#     - echo "No lint issues found."

# deploy-job:      # This job runs in the deploy stage.
#   stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
#   environment: production
#   script:
#     - echo "Deploying application..."
#     - echo "Application successfully deployed."